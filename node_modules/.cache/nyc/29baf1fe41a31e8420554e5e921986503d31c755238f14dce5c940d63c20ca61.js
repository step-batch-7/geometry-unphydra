var cov_2oy33p0enr=function(){var path="/Users/step12/nodejs_file/geometry-unphydra/src/line.js";var hash="2c7e029dfa3c35d62bf3823fd99490ee62b7f64a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/step12/nodejs_file/geometry-unphydra/src/line.js",statementMap:{"0":{start:{line:1,column:21},end:{line:3,column:1}},"1":{start:{line:2,column:2},end:{line:2,column:56}},"2":{start:{line:6,column:4},end:{line:6,column:28}},"3":{start:{line:7,column:4},end:{line:7,column:28}},"4":{start:{line:10,column:4},end:{line:10,column:90}},"5":{start:{line:13,column:29},end:{line:13,column:50}},"6":{start:{line:15,column:6},end:{line:15,column:61}},"7":{start:{line:16,column:4},end:{line:16,column:64}},"8":{start:{line:19,column:0},end:{line:19,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:1,column:21},end:{line:1,column:22}},loc:{start:{line:1,column:46},end:{line:3,column:1}},line:1},"1":{name:"(anonymous_1)",decl:{start:{line:5,column:2},end:{line:5,column:3}},loc:{start:{line:5,column:26},end:{line:8,column:3}},line:5},"2":{name:"(anonymous_2)",decl:{start:{line:9,column:2},end:{line:9,column:3}},loc:{start:{line:9,column:13},end:{line:11,column:3}},line:9},"3":{name:"(anonymous_3)",decl:{start:{line:12,column:2},end:{line:12,column:3}},loc:{start:{line:12,column:19},end:{line:17,column:3}},line:12}},branchMap:{"0":{loc:{start:{line:2,column:9},end:{line:2,column:55}},type:"binary-expr",locations:[{start:{line:2,column:9},end:{line:2,column:30}},{start:{line:2,column:34},end:{line:2,column:55}}],line:2},"1":{loc:{start:{line:15,column:6},end:{line:15,column:61}},type:"binary-expr",locations:[{start:{line:15,column:6},end:{line:15,column:22}},{start:{line:15,column:26},end:{line:15,column:61}}],line:15},"2":{loc:{start:{line:16,column:11},end:{line:16,column:63}},type:"binary-expr",locations:[{start:{line:16,column:11},end:{line:16,column:24}},{start:{line:16,column:28},end:{line:16,column:63}}],line:16}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"2c7e029dfa3c35d62bf3823fd99490ee62b7f64a"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_2oy33p0enr.s[0]++;const isEqualPoint=function(pointA,pointB){cov_2oy33p0enr.f[0]++;cov_2oy33p0enr.s[1]++;return(cov_2oy33p0enr.b[0][0]++,pointA.x===pointB.x)&&(cov_2oy33p0enr.b[0][1]++,pointA.y===pointB.y);};class Line{constructor(endA,endB){cov_2oy33p0enr.f[1]++;cov_2oy33p0enr.s[2]++;this.endA={...endA};cov_2oy33p0enr.s[3]++;this.endB={...endB};}toString(){cov_2oy33p0enr.f[2]++;cov_2oy33p0enr.s[4]++;return`line endA(${this.endA.x},${this.endA.y}) endB(${this.endB.x},${this.endB.y})`;}isEqualTo(other){cov_2oy33p0enr.f[3]++;const isInstanceofLine=(cov_2oy33p0enr.s[5]++,other instanceof Line);let arePointEqual=(cov_2oy33p0enr.s[6]++,(cov_2oy33p0enr.b[1][0]++,isInstanceofLine)&&(cov_2oy33p0enr.b[1][1]++,isEqualPoint(other.endA,this.endA)));cov_2oy33p0enr.s[7]++;return(cov_2oy33p0enr.b[2][0]++,arePointEqual)&&(cov_2oy33p0enr.b[2][1]++,isEqualPoint(other.endB,this.endB));}}cov_2oy33p0enr.s[8]++;module.exports=Line;